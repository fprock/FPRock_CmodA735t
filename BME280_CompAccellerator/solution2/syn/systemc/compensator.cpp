// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "compensator.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic compensator::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic compensator::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<102> compensator::ap_ST_fsm_state1 = "1";
const sc_lv<102> compensator::ap_ST_fsm_state2 = "10";
const sc_lv<102> compensator::ap_ST_fsm_state3 = "100";
const sc_lv<102> compensator::ap_ST_fsm_state4 = "1000";
const sc_lv<102> compensator::ap_ST_fsm_state5 = "10000";
const sc_lv<102> compensator::ap_ST_fsm_state6 = "100000";
const sc_lv<102> compensator::ap_ST_fsm_state7 = "1000000";
const sc_lv<102> compensator::ap_ST_fsm_state8 = "10000000";
const sc_lv<102> compensator::ap_ST_fsm_state9 = "100000000";
const sc_lv<102> compensator::ap_ST_fsm_state10 = "1000000000";
const sc_lv<102> compensator::ap_ST_fsm_state11 = "10000000000";
const sc_lv<102> compensator::ap_ST_fsm_state12 = "100000000000";
const sc_lv<102> compensator::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state99 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state100 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state101 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<102> compensator::ap_ST_fsm_state102 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> compensator::ap_const_lv32_0 = "00000000000000000000000000000000";
const int compensator::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> compensator::ap_const_lv32_1 = "1";
const sc_lv<32> compensator::ap_const_lv32_2 = "10";
const sc_lv<32> compensator::ap_const_lv32_3 = "11";
const sc_lv<32> compensator::ap_const_lv32_4 = "100";
const sc_lv<32> compensator::ap_const_lv32_5 = "101";
const sc_lv<32> compensator::ap_const_lv32_6 = "110";
const sc_lv<32> compensator::ap_const_lv32_7 = "111";
const sc_lv<32> compensator::ap_const_lv32_8 = "1000";
const sc_lv<32> compensator::ap_const_lv32_9 = "1001";
const sc_lv<32> compensator::ap_const_lv32_A = "1010";
const sc_lv<32> compensator::ap_const_lv32_B = "1011";
const sc_lv<32> compensator::ap_const_lv32_3F = "111111";
const sc_lv<32> compensator::ap_const_lv32_44 = "1000100";
const sc_lv<32> compensator::ap_const_lv32_4E = "1001110";
const sc_lv<32> compensator::ap_const_lv32_4F = "1001111";
const sc_lv<32> compensator::ap_const_lv32_50 = "1010000";
const sc_lv<32> compensator::ap_const_lv32_55 = "1010101";
const sc_lv<32> compensator::ap_const_lv32_56 = "1010110";
const sc_lv<32> compensator::ap_const_lv32_57 = "1010111";
const sc_lv<32> compensator::ap_const_lv32_58 = "1011000";
const sc_lv<32> compensator::ap_const_lv32_5D = "1011101";
const sc_lv<32> compensator::ap_const_lv32_63 = "1100011";
const sc_lv<32> compensator::ap_const_lv32_65 = "1100101";
const sc_lv<32> compensator::ap_const_lv32_64 = "1100100";
const sc_lv<64> compensator::ap_const_lv64_3F70000000000000 = "11111101110000000000000000000000000000000000000000000000000000";
const sc_lv<32> compensator::ap_const_lv32_5E = "1011110";
const sc_lv<64> compensator::ap_const_lv64_3F50000000000000 = "11111101010000000000000000000000000000000000000000000000000000";
const sc_lv<64> compensator::ap_const_lv64_4059000000000000 = "100000001011001000000000000000000000000000000000000000000000000";
const sc_lv<32> compensator::ap_const_lv32_45 = "1000101";
const sc_lv<32> compensator::ap_const_lv32_1F = "11111";
const sc_lv<32> compensator::ap_const_lv32_67AE = "110011110101110";
const sc_lv<29> compensator::ap_const_lv29_1FFF91B3 = "11111111111111001000110110011";
const sc_lv<32> compensator::ap_const_lv32_A6A81954 = "10100110101010000001100101010100";
const sc_lv<32> compensator::ap_const_lv32_C = "1100";
const sc_lv<32> compensator::ap_const_lv32_E = "1110";
const sc_lv<32> compensator::ap_const_lv32_19 = "11001";
const sc_lv<2> compensator::ap_const_lv2_0 = "00";
const sc_lv<24> compensator::ap_const_lv24_80 = "10000000";
const sc_lv<32> compensator::ap_const_lv32_17 = "10111";
const sc_lv<22> compensator::ap_const_lv22_3E0C00 = "1111100000110000000000";
const sc_lv<3> compensator::ap_const_lv3_0 = "000";
const sc_lv<22> compensator::ap_const_lv22_3ED400 = "1111101101010000000000";
const sc_lv<48> compensator::ap_const_lv48_1540000 = "1010101000000000000000000";
const sc_lv<32> compensator::ap_const_lv32_F = "1111";
const sc_lv<10> compensator::ap_const_lv10_0 = "0000000000";
const sc_lv<6> compensator::ap_const_lv6_0 = "000000";
const sc_lv<32> compensator::ap_const_lv32_100000 = "100000000000000000000";
const sc_lv<31> compensator::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<50> compensator::ap_const_lv50_30E2000000000 = "11000011100010000000000000000000000000000000000000";
const sc_lv<5> compensator::ap_const_lv5_0 = "00000";
const sc_lv<22> compensator::ap_const_lv22_200000 = "1000000000000000000000";
const sc_lv<32> compensator::ap_const_lv32_1E = "11110";
const sc_lv<64> compensator::ap_const_lv64_C35 = "110000110101";
const sc_lv<32> compensator::ap_const_lv32_34 = "110100";
const sc_lv<48> compensator::ap_const_lv48_FFFFFD6A7000 = "111111111111111111111101011010100111000000000000";
const sc_lv<63> compensator::ap_const_lv63_9043 = "1001000001000011";
const sc_lv<31> compensator::ap_const_lv31_19000000 = "11001000000000000000000000000";
const sc_lv<32> compensator::ap_const_lv32_1C = "11100";
const sc_lv<17> compensator::ap_const_lv17_19000 = "11001000000000000";
const sc_lv<63> compensator::ap_const_lv63_4821800000000000 = "100100000100001100000000000000000000000000000000000000000000000";
const sc_lv<32> compensator::ap_const_lv32_21 = "100001";
const sc_lv<32> compensator::ap_const_lv32_3E = "111110";
const sc_lv<32> compensator::ap_const_lv32_D = "1101";
const sc_lv<64> compensator::ap_const_lv64_10BD = "1000010111101";
const sc_lv<32> compensator::ap_const_lv32_51 = "1010001";
const sc_lv<64> compensator::ap_const_lv64_FFFFFFFFFFFFD80A = "1111111111111111111111111111111111111111111111111101100000001010";
const sc_lv<32> compensator::ap_const_lv32_13 = "10011";
const sc_lv<57> compensator::ap_const_lv57_26AC0 = "100110101011000000";
const sc_lv<26> compensator::ap_const_lv26_32 = "110010";
const sc_lv<29> compensator::ap_const_lv29_1FFFFFCE = "11111111111111111111111001110";
const sc_lv<30> compensator::ap_const_lv30_2F704000 = "101111011100000100000000000000";
const sc_lv<31> compensator::ap_const_lv31_182 = "110000010";
const sc_lv<31> compensator::ap_const_lv31_2000 = "10000000000000";
const sc_lv<35> compensator::ap_const_lv35_BD0 = "101111010000";
const sc_lv<32> compensator::ap_const_lv32_4B = "1001011";
const bool compensator::ap_const_boolean_1 = true;

compensator::compensator(sc_module_name name) : sc_module(name), mVcdFile(0) {
    compensator_compensator_io_s_axi_U = new compensator_compensator_io_s_axi<C_S_AXI_COMPENSATOR_IO_ADDR_WIDTH,C_S_AXI_COMPENSATOR_IO_DATA_WIDTH>("compensator_compensator_io_s_axi_U");
    compensator_compensator_io_s_axi_U->AWVALID(s_axi_compensator_io_AWVALID);
    compensator_compensator_io_s_axi_U->AWREADY(s_axi_compensator_io_AWREADY);
    compensator_compensator_io_s_axi_U->AWADDR(s_axi_compensator_io_AWADDR);
    compensator_compensator_io_s_axi_U->WVALID(s_axi_compensator_io_WVALID);
    compensator_compensator_io_s_axi_U->WREADY(s_axi_compensator_io_WREADY);
    compensator_compensator_io_s_axi_U->WDATA(s_axi_compensator_io_WDATA);
    compensator_compensator_io_s_axi_U->WSTRB(s_axi_compensator_io_WSTRB);
    compensator_compensator_io_s_axi_U->ARVALID(s_axi_compensator_io_ARVALID);
    compensator_compensator_io_s_axi_U->ARREADY(s_axi_compensator_io_ARREADY);
    compensator_compensator_io_s_axi_U->ARADDR(s_axi_compensator_io_ARADDR);
    compensator_compensator_io_s_axi_U->RVALID(s_axi_compensator_io_RVALID);
    compensator_compensator_io_s_axi_U->RREADY(s_axi_compensator_io_RREADY);
    compensator_compensator_io_s_axi_U->RDATA(s_axi_compensator_io_RDATA);
    compensator_compensator_io_s_axi_U->RRESP(s_axi_compensator_io_RRESP);
    compensator_compensator_io_s_axi_U->BVALID(s_axi_compensator_io_BVALID);
    compensator_compensator_io_s_axi_U->BREADY(s_axi_compensator_io_BREADY);
    compensator_compensator_io_s_axi_U->BRESP(s_axi_compensator_io_BRESP);
    compensator_compensator_io_s_axi_U->ACLK(ap_clk);
    compensator_compensator_io_s_axi_U->ARESET(ap_rst_n_inv);
    compensator_compensator_io_s_axi_U->ACLK_EN(ap_var_for_const0);
    compensator_compensator_io_s_axi_U->ap_start(ap_start);
    compensator_compensator_io_s_axi_U->interrupt(interrupt);
    compensator_compensator_io_s_axi_U->ap_ready(ap_ready);
    compensator_compensator_io_s_axi_U->ap_done(ap_done);
    compensator_compensator_io_s_axi_U->ap_idle(ap_idle);
    compensator_compensator_io_s_axi_U->temp_comp(grp_fu_245_p1);
    compensator_compensator_io_s_axi_U->temp_comp_ap_vld(temp_comp_ap_vld);
    compensator_compensator_io_s_axi_U->pres_comp(grp_fu_249_p1);
    compensator_compensator_io_s_axi_U->pres_comp_ap_vld(pres_comp_ap_vld);
    compensator_compensator_io_s_axi_U->hum_comp(grp_fu_253_p1);
    compensator_compensator_io_s_axi_U->hum_comp_ap_vld(hum_comp_ap_vld);
    compensator_compensator_io_s_axi_U->temp_raw(temp_raw);
    compensator_compensator_io_s_axi_U->pres_raw(pres_raw);
    compensator_compensator_io_s_axi_U->hum_raw(hum_raw);
    compensator_fptrubkb_U1 = new compensator_fptrubkb<1,2,64,32>("compensator_fptrubkb_U1");
    compensator_fptrubkb_U1->clk(ap_clk);
    compensator_fptrubkb_U1->reset(ap_rst_n_inv);
    compensator_fptrubkb_U1->din0(tmp_1_reg_1140);
    compensator_fptrubkb_U1->ce(ap_var_for_const0);
    compensator_fptrubkb_U1->dout(grp_fu_245_p1);
    compensator_fptrubkb_U2 = new compensator_fptrubkb<1,2,64,32>("compensator_fptrubkb_U2");
    compensator_fptrubkb_U2->clk(ap_clk);
    compensator_fptrubkb_U2->reset(ap_rst_n_inv);
    compensator_fptrubkb_U2->din0(tmp_4_reg_1145);
    compensator_fptrubkb_U2->ce(ap_var_for_const0);
    compensator_fptrubkb_U2->dout(grp_fu_249_p1);
    compensator_fptrubkb_U3 = new compensator_fptrubkb<1,2,64,32>("compensator_fptrubkb_U3");
    compensator_fptrubkb_U3->clk(ap_clk);
    compensator_fptrubkb_U3->reset(ap_rst_n_inv);
    compensator_fptrubkb_U3->din0(tmp_7_reg_1150);
    compensator_fptrubkb_U3->ce(ap_var_for_const0);
    compensator_fptrubkb_U3->dout(grp_fu_253_p1);
    compensator_dmul_cud_U4 = new compensator_dmul_cud<1,6,64,64,64>("compensator_dmul_cud_U4");
    compensator_dmul_cud_U4->clk(ap_clk);
    compensator_dmul_cud_U4->reset(ap_rst_n_inv);
    compensator_dmul_cud_U4->din0(tmp_3_reg_1130);
    compensator_dmul_cud_U4->din1(ap_var_for_const1);
    compensator_dmul_cud_U4->ce(ap_var_for_const0);
    compensator_dmul_cud_U4->dout(grp_fu_257_p2);
    compensator_dmul_cud_U5 = new compensator_dmul_cud<1,6,64,64,64>("compensator_dmul_cud_U5");
    compensator_dmul_cud_U5->clk(ap_clk);
    compensator_dmul_cud_U5->reset(ap_rst_n_inv);
    compensator_dmul_cud_U5->din0(tmp_6_reg_1135);
    compensator_dmul_cud_U5->din1(ap_var_for_const2);
    compensator_dmul_cud_U5->ce(ap_var_for_const0);
    compensator_dmul_cud_U5->dout(grp_fu_262_p2);
    compensator_ddiv_dEe_U6 = new compensator_ddiv_dEe<1,31,64,64,64>("compensator_ddiv_dEe_U6");
    compensator_ddiv_dEe_U6->clk(ap_clk);
    compensator_ddiv_dEe_U6->reset(ap_rst_n_inv);
    compensator_ddiv_dEe_U6->din0(tmp_reg_1073);
    compensator_ddiv_dEe_U6->din1(ap_var_for_const3);
    compensator_ddiv_dEe_U6->ce(ap_var_for_const0);
    compensator_ddiv_dEe_U6->dout(grp_fu_267_p2);
    compensator_sitodeOg_U7 = new compensator_sitodeOg<1,6,64,64>("compensator_sitodeOg_U7");
    compensator_sitodeOg_U7->clk(ap_clk);
    compensator_sitodeOg_U7->reset(ap_rst_n_inv);
    compensator_sitodeOg_U7->din0(grp_fu_272_p0);
    compensator_sitodeOg_U7->ce(ap_var_for_const0);
    compensator_sitodeOg_U7->dout(grp_fu_272_p1);
    compensator_sitodfYi_U8 = new compensator_sitodfYi<1,6,32,64>("compensator_sitodfYi_U8");
    compensator_sitodfYi_U8->clk(ap_clk);
    compensator_sitodfYi_U8->reset(ap_rst_n_inv);
    compensator_sitodfYi_U8->din0(grp_fu_275_p0);
    compensator_sitodfYi_U8->ce(ap_var_for_const0);
    compensator_sitodfYi_U8->dout(grp_fu_275_p1);
    compensator_mul_1g8j_U9 = new compensator_mul_1g8j<1,5,13,64,64>("compensator_mul_1g8j_U9");
    compensator_mul_1g8j_U9->clk(ap_clk);
    compensator_mul_1g8j_U9->reset(ap_rst_n_inv);
    compensator_mul_1g8j_U9->din0(grp_fu_593_p0);
    compensator_mul_1g8j_U9->din1(sub_ln42_reg_993);
    compensator_mul_1g8j_U9->ce(ap_var_for_const0);
    compensator_mul_1g8j_U9->dout(grp_fu_593_p2);
    compensator_mul_1hbi_U10 = new compensator_mul_1hbi<1,2,17,48,63>("compensator_mul_1hbi_U10");
    compensator_mul_1hbi_U10->clk(ap_clk);
    compensator_mul_1hbi_U10->reset(ap_rst_n_inv);
    compensator_mul_1hbi_U10->din0(grp_fu_679_p0);
    compensator_mul_1hbi_U10->din1(var1_s64_reg_1033);
    compensator_mul_1hbi_U10->ce(ap_var_for_const0);
    compensator_mul_1hbi_U10->dout(grp_fu_679_p2);
    compensator_sdiv_ibs_U11 = new compensator_sdiv_ibs<1,68,64,31,64>("compensator_sdiv_ibs_U11");
    compensator_sdiv_ibs_U11->clk(ap_clk);
    compensator_sdiv_ibs_U11->reset(ap_rst_n_inv);
    compensator_sdiv_ibs_U11->start(grp_fu_756_ap_start);
    compensator_sdiv_ibs_U11->done(grp_fu_756_ap_done);
    compensator_sdiv_ibs_U11->din0(mul_ln42_reg_1058);
    compensator_sdiv_ibs_U11->din1(grp_fu_756_p1);
    compensator_sdiv_ibs_U11->ce(ap_var_for_const0);
    compensator_sdiv_ibs_U11->dout(grp_fu_756_p2);
    compensator_mul_1jbC_U12 = new compensator_mul_1jbC<1,2,14,51,64>("compensator_mul_1jbC_U12");
    compensator_mul_1jbC_U12->clk(ap_clk);
    compensator_mul_1jbC_U12->reset(ap_rst_n_inv);
    compensator_mul_1jbC_U12->din0(grp_fu_778_p0);
    compensator_mul_1jbC_U12->din1(trunc_ln5_reg_1084);
    compensator_mul_1jbC_U12->ce(ap_var_for_const0);
    compensator_mul_1jbC_U12->dout(grp_fu_778_p2);
    compensator_mul_5kbM_U13 = new compensator_mul_5kbM<1,5,51,64,64>("compensator_mul_5kbM_U13");
    compensator_mul_5kbM_U13->clk(ap_clk);
    compensator_mul_5kbM_U13->reset(ap_rst_n_inv);
    compensator_mul_5kbM_U13->din0(grp_fu_784_p0);
    compensator_mul_5kbM_U13->din1(mul_ln43_reg_1095);
    compensator_mul_5kbM_U13->ce(ap_var_for_const0);
    compensator_mul_5kbM_U13->dout(grp_fu_784_p2);
    compensator_mul_1lbW_U14 = new compensator_mul_1lbW<1,5,15,64,64>("compensator_mul_1lbW_U14");
    compensator_mul_1lbW_U14->clk(ap_clk);
    compensator_mul_1lbW_U14->reset(ap_rst_n_inv);
    compensator_mul_1lbW_U14->din0(grp_fu_788_p0);
    compensator_mul_1lbW_U14->din1(p_fine_reg_1078);
    compensator_mul_1lbW_U14->ce(ap_var_for_const0);
    compensator_mul_1lbW_U14->dout(grp_fu_788_p2);
    compensator_mul_mmb6_U15 = new compensator_mul_mmb6<1,1,7,20,26>("compensator_mul_mmb6_U15");
    compensator_mul_mmb6_U15->din0(mul_ln26_1_fu_861_p0);
    compensator_mul_mmb6_U15->din1(trunc_ln26_1_reg_938);
    compensator_mul_mmb6_U15->dout(mul_ln26_1_fu_861_p2);
    compensator_mac_mncg_U16 = new compensator_mac_mncg<1,1,7,22,30,30>("compensator_mac_mncg_U16");
    compensator_mac_mncg_U16->din0(grp_fu_868_p0);
    compensator_mac_mncg_U16->din1(var1_s32_1_reg_966);
    compensator_mac_mncg_U16->din2(ap_var_for_const4);
    compensator_mac_mncg_U16->dout(grp_fu_868_p3);
    compensator_mac_mocq_U17 = new compensator_mac_mocq<1,1,10,22,15,31>("compensator_mac_mocq_U17");
    compensator_mac_mocq_U17->din0(grp_fu_877_p0);
    compensator_mac_mocq_U17->din1(grp_fu_877_p1);
    compensator_mac_mocq_U17->din2(grp_fu_877_p2);
    compensator_mac_mocq_U17->dout(grp_fu_877_p3);
    compensator_mul_mpcA_U18 = new compensator_mul_mpcA<1,1,13,22,35>("compensator_mul_mpcA_U18");
    compensator_mul_mpcA_U18->din0(mul_ln35_fu_886_p0);
    compensator_mul_mpcA_U18->din1(add_ln31_reg_953);
    compensator_mul_mpcA_U18->dout(mul_ln35_fu_886_p2);
    compensator_mul_mqcK_U19 = new compensator_mul_mqcK<1,1,17,17,32>("compensator_mul_mqcK_U19");
    compensator_mul_mqcK_U19->din0(trunc_ln8_reg_983);
    compensator_mul_mqcK_U19->din1(var1_s32_2_fu_892_p1);
    compensator_mul_mqcK_U19->dout(var1_s32_2_fu_892_p2);
    compensator_mul_mrcU_U20 = new compensator_mul_mrcU<1,1,17,17,32>("compensator_mul_mrcU_U20");
    compensator_mul_mrcU_U20->din0(mul_ln53_fu_899_p0);
    compensator_mul_mrcU_U20->din1(mul_ln53_fu_899_p1);
    compensator_mul_mrcU_U20->dout(mul_ln53_fu_899_p2);
    compensator_mul_msc4_U21 = new compensator_mul_msc4<1,1,8,25,32>("compensator_mul_msc4_U21");
    compensator_mul_msc4_U21->din0(mul_ln53_1_fu_906_p0);
    compensator_mul_msc4_U21->din1(trunc_ln53_1_reg_1028);
    compensator_mul_msc4_U21->dout(mul_ln53_1_fu_906_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln25_fu_318_p2);
    sensitive << ( mul_ln25_reg_923 );

    SC_METHOD(thread_add_ln26_fu_312_p2);
    sensitive << ( sext_ln26_fu_308_p1 );

    SC_METHOD(thread_add_ln28_1_fu_384_p2);
    sensitive << ( shl_ln_fu_376_p3 );

    SC_METHOD(thread_add_ln28_fu_390_p2);
    sensitive << ( sext_ln27_fu_372_p1 );
    sensitive << ( add_ln28_1_fu_384_p2 );

    SC_METHOD(thread_add_ln31_fu_406_p2);
    sensitive << ( t_fine_fu_367_p2 );

    SC_METHOD(thread_add_ln34_fu_542_p2);
    sensitive << ( p_cast_fu_539_p1 );

    SC_METHOD(thread_add_ln36_fu_737_p2);
    sensitive << ( mul_ln36_reg_1053 );

    SC_METHOD(thread_add_ln45_1_fu_829_p2);
    sensitive << ( p_fine_reg_1078 );
    sensitive << ( sext_ln45_fu_825_p1 );

    SC_METHOD(thread_add_ln45_2_fu_847_p2);
    sensitive << ( sext_ln45_1_fu_844_p1 );

    SC_METHOD(thread_add_ln45_fu_819_p2);
    sensitive << ( sext_ln43_1_fu_813_p1 );
    sensitive << ( sext_ln44_fu_816_p1 );

    SC_METHOD(thread_add_ln50_1_fu_469_p2);
    sensitive << ( shl_ln50_fu_461_p2 );
    sensitive << ( sext_ln50_2_fu_466_p1 );

    SC_METHOD(thread_and_ln50_1_fu_564_p3);
    sensitive << ( tmp_14_reg_988 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state100);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state101);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state102);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state88);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state95);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state102 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state102 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_empty_20_fu_452_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln31_fu_440_p1 );

    SC_METHOD(thread_empty_20_fu_452_p2);
    sensitive << ( empty_20_fu_452_p1 );

    SC_METHOD(thread_grp_fu_272_p0);
    sensitive << ( sext_ln28_fu_761_p1 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( sext_ln45_2_fu_853_p1 );
    sensitive << ( ap_CS_fsm_state89 );

    SC_METHOD(thread_grp_fu_275_p0);
    sensitive << ( select_ln55_reg_1048 );
    sensitive << ( ap_CS_fsm_state89 );

    SC_METHOD(thread_grp_fu_593_p0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_679_p0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_756_ap_start);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_fu_756_p1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_756_p10 );

    SC_METHOD(thread_grp_fu_756_p10);
    sensitive << ( tmp_13_fu_742_p4 );

    SC_METHOD(thread_grp_fu_778_p0);
    sensitive << ( ap_CS_fsm_state80 );

    SC_METHOD(thread_grp_fu_784_p0);
    sensitive << ( sext_ln43_reg_1089 );
    sensitive << ( ap_CS_fsm_state82 );

    SC_METHOD(thread_grp_fu_788_p0);
    sensitive << ( ap_CS_fsm_state82 );

    SC_METHOD(thread_grp_fu_868_p0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_877_p0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_877_p1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_fu_877_p10 );

    SC_METHOD(thread_grp_fu_877_p10);
    sensitive << ( xor_ln50_fu_571_p2 );

    SC_METHOD(thread_grp_fu_877_p2);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_hum_comp_ap_vld);
    sensitive << ( ap_CS_fsm_state102 );

    SC_METHOD(thread_icmp_ln55_fu_713_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( var1_s32_4_fu_705_p3 );

    SC_METHOD(thread_mul_ln25_fu_292_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( trunc_ln_fu_278_p4 );

    SC_METHOD(thread_mul_ln25_fu_292_p2);
    sensitive << ( mul_ln25_fu_292_p1 );

    SC_METHOD(thread_mul_ln26_1_fu_861_p0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_mul_ln26_fu_336_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sext_ln26_1_fu_333_p1 );

    SC_METHOD(thread_mul_ln26_fu_336_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sext_ln26_1_fu_333_p1 );

    SC_METHOD(thread_mul_ln26_fu_336_p2);
    sensitive << ( mul_ln26_fu_336_p0 );
    sensitive << ( mul_ln26_fu_336_p1 );

    SC_METHOD(thread_mul_ln35_1_fu_622_p0);
    sensitive << ( add_ln31_reg_953 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_mul_ln35_1_fu_622_p1);
    sensitive << ( mul_ln35_reg_1003 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_mul_ln35_1_fu_622_p2);
    sensitive << ( mul_ln35_1_fu_622_p0 );
    sensitive << ( mul_ln35_1_fu_622_p1 );

    SC_METHOD(thread_mul_ln35_2_fu_638_p1);
    sensitive << ( add_ln31_reg_953 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_mul_ln35_2_fu_638_p2);
    sensitive << ( mul_ln35_2_fu_638_p1 );

    SC_METHOD(thread_mul_ln35_fu_886_p0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_mul_ln53_1_fu_906_p0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_mul_ln53_fu_899_p0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sext_ln53_fu_644_p1 );

    SC_METHOD(thread_mul_ln53_fu_899_p1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sext_ln53_fu_644_p1 );

    SC_METHOD(thread_p_cast_fu_539_p1);
    sensitive << ( empty_20_reg_978 );

    SC_METHOD(thread_pres_comp_ap_vld);
    sensitive << ( ap_CS_fsm_state102 );

    SC_METHOD(thread_select_ln55_fu_729_p3);
    sensitive << ( icmp_ln55_fu_713_p2 );
    sensitive << ( tmp_17_fu_719_p4 );

    SC_METHOD(thread_sext_ln26_1_fu_333_p1);
    sensitive << ( add_ln26_reg_928 );

    SC_METHOD(thread_sext_ln26_3_fu_364_p1);
    sensitive << ( trunc_ln26_2_reg_943 );

    SC_METHOD(thread_sext_ln26_fu_308_p1);
    sensitive << ( trunc_ln1_fu_298_p4 );

    SC_METHOD(thread_sext_ln27_fu_372_p1);
    sensitive << ( t_fine_fu_367_p2 );

    SC_METHOD(thread_sext_ln28_fu_761_p1);
    sensitive << ( trunc_ln2_reg_948 );

    SC_METHOD(thread_sext_ln31_3_fu_412_p1);
    sensitive << ( add_ln31_fu_406_p2 );

    SC_METHOD(thread_sext_ln31_fu_440_p1);
    sensitive << ( add_ln31_reg_953 );

    SC_METHOD(thread_sext_ln32_1_fu_519_p1);
    sensitive << ( var2_s64_reg_973 );

    SC_METHOD(thread_sext_ln32_fu_424_p1);
    sensitive << ( tmp_8_fu_416_p3 );

    SC_METHOD(thread_sext_ln34_fu_548_p1);
    sensitive << ( add_ln34_fu_542_p2 );

    SC_METHOD(thread_sext_ln35_2_fu_656_p1);
    sensitive << ( tmp_10_reg_1018 );

    SC_METHOD(thread_sext_ln42_fu_535_p1);
    sensitive << ( shl_ln1_fu_527_p3 );

    SC_METHOD(thread_sext_ln43_1_fu_813_p1);
    sensitive << ( trunc_ln43_1_reg_1100 );

    SC_METHOD(thread_sext_ln43_fu_775_p1);
    sensitive << ( trunc_ln5_reg_1084 );

    SC_METHOD(thread_sext_ln44_fu_816_p1);
    sensitive << ( trunc_ln6_reg_1105 );

    SC_METHOD(thread_sext_ln45_1_fu_844_p1);
    sensitive << ( trunc_ln7_reg_1110 );

    SC_METHOD(thread_sext_ln45_2_fu_853_p1);
    sensitive << ( add_ln45_2_reg_1115 );

    SC_METHOD(thread_sext_ln45_fu_825_p1);
    sensitive << ( add_ln45_fu_819_p2 );

    SC_METHOD(thread_sext_ln50_2_fu_466_p1);
    sensitive << ( grp_fu_868_p3 );

    SC_METHOD(thread_sext_ln50_3_fu_499_p1);
    sensitive << ( shl_ln50_2_fu_492_p3 );

    SC_METHOD(thread_sext_ln53_2_fu_685_p1);
    sensitive << ( trunc_ln53_2_reg_1038 );

    SC_METHOD(thread_sext_ln53_fu_644_p1);
    sensitive << ( trunc_ln9_reg_1013 );

    SC_METHOD(thread_shl_ln1_fu_527_p3);
    sensitive << ( sub_ln41_fu_522_p2 );

    SC_METHOD(thread_shl_ln50_1_fu_485_p3);
    sensitive << ( var1_s32_1_reg_966 );

    SC_METHOD(thread_shl_ln50_2_fu_492_p3);
    sensitive << ( var1_s32_1_reg_966 );

    SC_METHOD(thread_shl_ln50_fu_461_p2);
    sensitive << ( hum_raw_read_reg_913 );

    SC_METHOD(thread_shl_ln_fu_376_p3);
    sensitive << ( t_fine_fu_367_p2 );

    SC_METHOD(thread_sub_ln32_fu_428_p2);
    sensitive << ( sext_ln31_3_fu_412_p1 );
    sensitive << ( sext_ln32_fu_424_p1 );

    SC_METHOD(thread_sub_ln41_fu_522_p2);
    sensitive << ( pres_raw_read_reg_918 );

    SC_METHOD(thread_sub_ln42_fu_558_p2);
    sensitive << ( var2_s64_2_fu_552_p2 );
    sensitive << ( sext_ln32_1_fu_519_p1 );

    SC_METHOD(thread_sub_ln50_fu_503_p2);
    sensitive << ( shl_ln50_1_fu_485_p3 );
    sensitive << ( sext_ln50_3_fu_499_p1 );

    SC_METHOD(thread_t_fine_fu_367_p2);
    sensitive << ( trunc_ln25_reg_933 );
    sensitive << ( sext_ln26_3_fu_364_p1 );

    SC_METHOD(thread_temp_comp_ap_vld);
    sensitive << ( ap_CS_fsm_state102 );

    SC_METHOD(thread_tmp_13_fu_742_p4);
    sensitive << ( add_ln36_fu_737_p2 );

    SC_METHOD(thread_tmp_16_fu_697_p3);
    sensitive << ( var1_s32_3_fu_688_p2 );

    SC_METHOD(thread_tmp_17_fu_719_p4);
    sensitive << ( var1_s32_4_fu_705_p3 );

    SC_METHOD(thread_tmp_8_fu_416_p3);
    sensitive << ( add_ln31_fu_406_p2 );

    SC_METHOD(thread_trunc_ln1_fu_298_p4);
    sensitive << ( temp_raw );

    SC_METHOD(thread_trunc_ln25_fu_329_p1);
    sensitive << ( var1_s32_fu_323_p2 );

    SC_METHOD(thread_trunc_ln53_fu_693_p1);
    sensitive << ( var1_s32_3_fu_688_p2 );

    SC_METHOD(thread_trunc_ln_fu_278_p4);
    sensitive << ( temp_raw );

    SC_METHOD(thread_var1_s32_1_fu_434_p2);
    sensitive << ( t_fine_fu_367_p2 );

    SC_METHOD(thread_var1_s32_2_fu_892_p1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( var1_s32_2_fu_892_p10 );

    SC_METHOD(thread_var1_s32_2_fu_892_p10);
    sensitive << ( tmp_15_reg_998 );

    SC_METHOD(thread_var1_s32_3_fu_688_p2);
    sensitive << ( var1_s32_2_reg_1008 );
    sensitive << ( sext_ln53_2_fu_685_p1 );

    SC_METHOD(thread_var1_s32_4_fu_705_p3);
    sensitive << ( tmp_16_fu_697_p3 );
    sensitive << ( trunc_ln53_fu_693_p1 );

    SC_METHOD(thread_var1_s32_fu_323_p2);
    sensitive << ( add_ln25_fu_318_p2 );

    SC_METHOD(thread_var1_s64_fu_659_p2);
    sensitive << ( mul_ln35_2_reg_1023 );
    sensitive << ( sext_ln35_2_fu_656_p1 );

    SC_METHOD(thread_var2_s64_2_fu_552_p2);
    sensitive << ( sext_ln42_fu_535_p1 );
    sensitive << ( sext_ln34_fu_548_p1 );

    SC_METHOD(thread_var2_s64_fu_446_p0);
    sensitive << ( sub_ln32_reg_961 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_var2_s64_fu_446_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln31_fu_440_p1 );

    SC_METHOD(thread_var2_s64_fu_446_p2);
    sensitive << ( var2_s64_fu_446_p0 );
    sensitive << ( var2_s64_fu_446_p1 );

    SC_METHOD(thread_xor_ln50_fu_571_p2);
    sensitive << ( and_ln50_1_fu_564_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "compensator_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_compensator_io_AWVALID, "(port)s_axi_compensator_io_AWVALID");
    sc_trace(mVcdFile, s_axi_compensator_io_AWREADY, "(port)s_axi_compensator_io_AWREADY");
    sc_trace(mVcdFile, s_axi_compensator_io_AWADDR, "(port)s_axi_compensator_io_AWADDR");
    sc_trace(mVcdFile, s_axi_compensator_io_WVALID, "(port)s_axi_compensator_io_WVALID");
    sc_trace(mVcdFile, s_axi_compensator_io_WREADY, "(port)s_axi_compensator_io_WREADY");
    sc_trace(mVcdFile, s_axi_compensator_io_WDATA, "(port)s_axi_compensator_io_WDATA");
    sc_trace(mVcdFile, s_axi_compensator_io_WSTRB, "(port)s_axi_compensator_io_WSTRB");
    sc_trace(mVcdFile, s_axi_compensator_io_ARVALID, "(port)s_axi_compensator_io_ARVALID");
    sc_trace(mVcdFile, s_axi_compensator_io_ARREADY, "(port)s_axi_compensator_io_ARREADY");
    sc_trace(mVcdFile, s_axi_compensator_io_ARADDR, "(port)s_axi_compensator_io_ARADDR");
    sc_trace(mVcdFile, s_axi_compensator_io_RVALID, "(port)s_axi_compensator_io_RVALID");
    sc_trace(mVcdFile, s_axi_compensator_io_RREADY, "(port)s_axi_compensator_io_RREADY");
    sc_trace(mVcdFile, s_axi_compensator_io_RDATA, "(port)s_axi_compensator_io_RDATA");
    sc_trace(mVcdFile, s_axi_compensator_io_RRESP, "(port)s_axi_compensator_io_RRESP");
    sc_trace(mVcdFile, s_axi_compensator_io_BVALID, "(port)s_axi_compensator_io_BVALID");
    sc_trace(mVcdFile, s_axi_compensator_io_BREADY, "(port)s_axi_compensator_io_BREADY");
    sc_trace(mVcdFile, s_axi_compensator_io_BRESP, "(port)s_axi_compensator_io_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, temp_comp_ap_vld, "temp_comp_ap_vld");
    sc_trace(mVcdFile, pres_comp_ap_vld, "pres_comp_ap_vld");
    sc_trace(mVcdFile, hum_comp_ap_vld, "hum_comp_ap_vld");
    sc_trace(mVcdFile, temp_raw, "temp_raw");
    sc_trace(mVcdFile, pres_raw, "pres_raw");
    sc_trace(mVcdFile, hum_raw, "hum_raw");
    sc_trace(mVcdFile, hum_raw_read_reg_913, "hum_raw_read_reg_913");
    sc_trace(mVcdFile, pres_raw_read_reg_918, "pres_raw_read_reg_918");
    sc_trace(mVcdFile, mul_ln25_fu_292_p2, "mul_ln25_fu_292_p2");
    sc_trace(mVcdFile, mul_ln25_reg_923, "mul_ln25_reg_923");
    sc_trace(mVcdFile, add_ln26_fu_312_p2, "add_ln26_fu_312_p2");
    sc_trace(mVcdFile, add_ln26_reg_928, "add_ln26_reg_928");
    sc_trace(mVcdFile, trunc_ln25_fu_329_p1, "trunc_ln25_fu_329_p1");
    sc_trace(mVcdFile, trunc_ln25_reg_933, "trunc_ln25_reg_933");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, trunc_ln26_1_reg_938, "trunc_ln26_1_reg_938");
    sc_trace(mVcdFile, trunc_ln26_2_reg_943, "trunc_ln26_2_reg_943");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, trunc_ln2_reg_948, "trunc_ln2_reg_948");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln31_fu_406_p2, "add_ln31_fu_406_p2");
    sc_trace(mVcdFile, add_ln31_reg_953, "add_ln31_reg_953");
    sc_trace(mVcdFile, sub_ln32_fu_428_p2, "sub_ln32_fu_428_p2");
    sc_trace(mVcdFile, sub_ln32_reg_961, "sub_ln32_reg_961");
    sc_trace(mVcdFile, var1_s32_1_fu_434_p2, "var1_s32_1_fu_434_p2");
    sc_trace(mVcdFile, var1_s32_1_reg_966, "var1_s32_1_reg_966");
    sc_trace(mVcdFile, var2_s64_fu_446_p2, "var2_s64_fu_446_p2");
    sc_trace(mVcdFile, var2_s64_reg_973, "var2_s64_reg_973");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, empty_20_fu_452_p2, "empty_20_fu_452_p2");
    sc_trace(mVcdFile, empty_20_reg_978, "empty_20_reg_978");
    sc_trace(mVcdFile, trunc_ln8_reg_983, "trunc_ln8_reg_983");
    sc_trace(mVcdFile, tmp_14_reg_988, "tmp_14_reg_988");
    sc_trace(mVcdFile, sub_ln42_fu_558_p2, "sub_ln42_fu_558_p2");
    sc_trace(mVcdFile, sub_ln42_reg_993, "sub_ln42_reg_993");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_15_reg_998, "tmp_15_reg_998");
    sc_trace(mVcdFile, mul_ln35_fu_886_p2, "mul_ln35_fu_886_p2");
    sc_trace(mVcdFile, mul_ln35_reg_1003, "mul_ln35_reg_1003");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, var1_s32_2_fu_892_p2, "var1_s32_2_fu_892_p2");
    sc_trace(mVcdFile, var1_s32_2_reg_1008, "var1_s32_2_reg_1008");
    sc_trace(mVcdFile, trunc_ln9_reg_1013, "trunc_ln9_reg_1013");
    sc_trace(mVcdFile, tmp_10_reg_1018, "tmp_10_reg_1018");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, mul_ln35_2_fu_638_p2, "mul_ln35_2_fu_638_p2");
    sc_trace(mVcdFile, mul_ln35_2_reg_1023, "mul_ln35_2_reg_1023");
    sc_trace(mVcdFile, trunc_ln53_1_reg_1028, "trunc_ln53_1_reg_1028");
    sc_trace(mVcdFile, var1_s64_fu_659_p2, "var1_s64_fu_659_p2");
    sc_trace(mVcdFile, var1_s64_reg_1033, "var1_s64_reg_1033");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, trunc_ln53_2_reg_1038, "trunc_ln53_2_reg_1038");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, select_ln55_fu_729_p3, "select_ln55_fu_729_p3");
    sc_trace(mVcdFile, select_ln55_reg_1048, "select_ln55_reg_1048");
    sc_trace(mVcdFile, grp_fu_679_p2, "grp_fu_679_p2");
    sc_trace(mVcdFile, mul_ln36_reg_1053, "mul_ln36_reg_1053");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_593_p2, "grp_fu_593_p2");
    sc_trace(mVcdFile, mul_ln42_reg_1058, "mul_ln42_reg_1058");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, sext_ln28_fu_761_p1, "sext_ln28_fu_761_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, grp_fu_272_p1, "grp_fu_272_p1");
    sc_trace(mVcdFile, tmp_reg_1073, "tmp_reg_1073");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, grp_fu_756_p2, "grp_fu_756_p2");
    sc_trace(mVcdFile, p_fine_reg_1078, "p_fine_reg_1078");
    sc_trace(mVcdFile, ap_CS_fsm_state79, "ap_CS_fsm_state79");
    sc_trace(mVcdFile, trunc_ln5_reg_1084, "trunc_ln5_reg_1084");
    sc_trace(mVcdFile, sext_ln43_fu_775_p1, "sext_ln43_fu_775_p1");
    sc_trace(mVcdFile, sext_ln43_reg_1089, "sext_ln43_reg_1089");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, grp_fu_778_p2, "grp_fu_778_p2");
    sc_trace(mVcdFile, mul_ln43_reg_1095, "mul_ln43_reg_1095");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, trunc_ln43_1_reg_1100, "trunc_ln43_1_reg_1100");
    sc_trace(mVcdFile, ap_CS_fsm_state86, "ap_CS_fsm_state86");
    sc_trace(mVcdFile, trunc_ln6_reg_1105, "trunc_ln6_reg_1105");
    sc_trace(mVcdFile, trunc_ln7_reg_1110, "trunc_ln7_reg_1110");
    sc_trace(mVcdFile, ap_CS_fsm_state87, "ap_CS_fsm_state87");
    sc_trace(mVcdFile, add_ln45_2_fu_847_p2, "add_ln45_2_fu_847_p2");
    sc_trace(mVcdFile, add_ln45_2_reg_1115, "add_ln45_2_reg_1115");
    sc_trace(mVcdFile, ap_CS_fsm_state88, "ap_CS_fsm_state88");
    sc_trace(mVcdFile, sext_ln45_2_fu_853_p1, "sext_ln45_2_fu_853_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state89, "ap_CS_fsm_state89");
    sc_trace(mVcdFile, tmp_3_reg_1130, "tmp_3_reg_1130");
    sc_trace(mVcdFile, ap_CS_fsm_state94, "ap_CS_fsm_state94");
    sc_trace(mVcdFile, grp_fu_275_p1, "grp_fu_275_p1");
    sc_trace(mVcdFile, tmp_6_reg_1135, "tmp_6_reg_1135");
    sc_trace(mVcdFile, grp_fu_267_p2, "grp_fu_267_p2");
    sc_trace(mVcdFile, tmp_1_reg_1140, "tmp_1_reg_1140");
    sc_trace(mVcdFile, ap_CS_fsm_state100, "ap_CS_fsm_state100");
    sc_trace(mVcdFile, grp_fu_257_p2, "grp_fu_257_p2");
    sc_trace(mVcdFile, tmp_4_reg_1145, "tmp_4_reg_1145");
    sc_trace(mVcdFile, grp_fu_262_p2, "grp_fu_262_p2");
    sc_trace(mVcdFile, tmp_7_reg_1150, "tmp_7_reg_1150");
    sc_trace(mVcdFile, grp_fu_245_p1, "grp_fu_245_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state102, "ap_CS_fsm_state102");
    sc_trace(mVcdFile, grp_fu_249_p1, "grp_fu_249_p1");
    sc_trace(mVcdFile, grp_fu_253_p1, "grp_fu_253_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state101, "ap_CS_fsm_state101");
    sc_trace(mVcdFile, ap_CS_fsm_state95, "ap_CS_fsm_state95");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, grp_fu_272_p0, "grp_fu_272_p0");
    sc_trace(mVcdFile, grp_fu_275_p0, "grp_fu_275_p0");
    sc_trace(mVcdFile, trunc_ln_fu_278_p4, "trunc_ln_fu_278_p4");
    sc_trace(mVcdFile, mul_ln25_fu_292_p1, "mul_ln25_fu_292_p1");
    sc_trace(mVcdFile, trunc_ln1_fu_298_p4, "trunc_ln1_fu_298_p4");
    sc_trace(mVcdFile, sext_ln26_fu_308_p1, "sext_ln26_fu_308_p1");
    sc_trace(mVcdFile, add_ln25_fu_318_p2, "add_ln25_fu_318_p2");
    sc_trace(mVcdFile, var1_s32_fu_323_p2, "var1_s32_fu_323_p2");
    sc_trace(mVcdFile, mul_ln26_fu_336_p0, "mul_ln26_fu_336_p0");
    sc_trace(mVcdFile, sext_ln26_1_fu_333_p1, "sext_ln26_1_fu_333_p1");
    sc_trace(mVcdFile, mul_ln26_fu_336_p1, "mul_ln26_fu_336_p1");
    sc_trace(mVcdFile, mul_ln26_fu_336_p2, "mul_ln26_fu_336_p2");
    sc_trace(mVcdFile, mul_ln26_1_fu_861_p2, "mul_ln26_1_fu_861_p2");
    sc_trace(mVcdFile, sext_ln26_3_fu_364_p1, "sext_ln26_3_fu_364_p1");
    sc_trace(mVcdFile, t_fine_fu_367_p2, "t_fine_fu_367_p2");
    sc_trace(mVcdFile, shl_ln_fu_376_p3, "shl_ln_fu_376_p3");
    sc_trace(mVcdFile, sext_ln27_fu_372_p1, "sext_ln27_fu_372_p1");
    sc_trace(mVcdFile, add_ln28_1_fu_384_p2, "add_ln28_1_fu_384_p2");
    sc_trace(mVcdFile, add_ln28_fu_390_p2, "add_ln28_fu_390_p2");
    sc_trace(mVcdFile, tmp_8_fu_416_p3, "tmp_8_fu_416_p3");
    sc_trace(mVcdFile, sext_ln31_3_fu_412_p1, "sext_ln31_3_fu_412_p1");
    sc_trace(mVcdFile, sext_ln32_fu_424_p1, "sext_ln32_fu_424_p1");
    sc_trace(mVcdFile, var2_s64_fu_446_p0, "var2_s64_fu_446_p0");
    sc_trace(mVcdFile, var2_s64_fu_446_p1, "var2_s64_fu_446_p1");
    sc_trace(mVcdFile, sext_ln31_fu_440_p1, "sext_ln31_fu_440_p1");
    sc_trace(mVcdFile, empty_20_fu_452_p1, "empty_20_fu_452_p1");
    sc_trace(mVcdFile, grp_fu_868_p3, "grp_fu_868_p3");
    sc_trace(mVcdFile, shl_ln50_fu_461_p2, "shl_ln50_fu_461_p2");
    sc_trace(mVcdFile, sext_ln50_2_fu_466_p1, "sext_ln50_2_fu_466_p1");
    sc_trace(mVcdFile, add_ln50_1_fu_469_p2, "add_ln50_1_fu_469_p2");
    sc_trace(mVcdFile, shl_ln50_2_fu_492_p3, "shl_ln50_2_fu_492_p3");
    sc_trace(mVcdFile, shl_ln50_1_fu_485_p3, "shl_ln50_1_fu_485_p3");
    sc_trace(mVcdFile, sext_ln50_3_fu_499_p1, "sext_ln50_3_fu_499_p1");
    sc_trace(mVcdFile, sub_ln50_fu_503_p2, "sub_ln50_fu_503_p2");
    sc_trace(mVcdFile, sub_ln41_fu_522_p2, "sub_ln41_fu_522_p2");
    sc_trace(mVcdFile, shl_ln1_fu_527_p3, "shl_ln1_fu_527_p3");
    sc_trace(mVcdFile, p_cast_fu_539_p1, "p_cast_fu_539_p1");
    sc_trace(mVcdFile, add_ln34_fu_542_p2, "add_ln34_fu_542_p2");
    sc_trace(mVcdFile, sext_ln42_fu_535_p1, "sext_ln42_fu_535_p1");
    sc_trace(mVcdFile, sext_ln34_fu_548_p1, "sext_ln34_fu_548_p1");
    sc_trace(mVcdFile, var2_s64_2_fu_552_p2, "var2_s64_2_fu_552_p2");
    sc_trace(mVcdFile, sext_ln32_1_fu_519_p1, "sext_ln32_1_fu_519_p1");
    sc_trace(mVcdFile, and_ln50_1_fu_564_p3, "and_ln50_1_fu_564_p3");
    sc_trace(mVcdFile, xor_ln50_fu_571_p2, "xor_ln50_fu_571_p2");
    sc_trace(mVcdFile, grp_fu_877_p3, "grp_fu_877_p3");
    sc_trace(mVcdFile, grp_fu_593_p0, "grp_fu_593_p0");
    sc_trace(mVcdFile, mul_ln35_1_fu_622_p0, "mul_ln35_1_fu_622_p0");
    sc_trace(mVcdFile, mul_ln35_1_fu_622_p1, "mul_ln35_1_fu_622_p1");
    sc_trace(mVcdFile, mul_ln35_1_fu_622_p2, "mul_ln35_1_fu_622_p2");
    sc_trace(mVcdFile, mul_ln35_2_fu_638_p1, "mul_ln35_2_fu_638_p1");
    sc_trace(mVcdFile, mul_ln53_fu_899_p2, "mul_ln53_fu_899_p2");
    sc_trace(mVcdFile, sext_ln35_2_fu_656_p1, "sext_ln35_2_fu_656_p1");
    sc_trace(mVcdFile, mul_ln53_1_fu_906_p2, "mul_ln53_1_fu_906_p2");
    sc_trace(mVcdFile, grp_fu_679_p0, "grp_fu_679_p0");
    sc_trace(mVcdFile, sext_ln53_2_fu_685_p1, "sext_ln53_2_fu_685_p1");
    sc_trace(mVcdFile, var1_s32_3_fu_688_p2, "var1_s32_3_fu_688_p2");
    sc_trace(mVcdFile, tmp_16_fu_697_p3, "tmp_16_fu_697_p3");
    sc_trace(mVcdFile, trunc_ln53_fu_693_p1, "trunc_ln53_fu_693_p1");
    sc_trace(mVcdFile, var1_s32_4_fu_705_p3, "var1_s32_4_fu_705_p3");
    sc_trace(mVcdFile, icmp_ln55_fu_713_p2, "icmp_ln55_fu_713_p2");
    sc_trace(mVcdFile, tmp_17_fu_719_p4, "tmp_17_fu_719_p4");
    sc_trace(mVcdFile, add_ln36_fu_737_p2, "add_ln36_fu_737_p2");
    sc_trace(mVcdFile, tmp_13_fu_742_p4, "tmp_13_fu_742_p4");
    sc_trace(mVcdFile, grp_fu_756_p1, "grp_fu_756_p1");
    sc_trace(mVcdFile, grp_fu_778_p0, "grp_fu_778_p0");
    sc_trace(mVcdFile, grp_fu_784_p0, "grp_fu_784_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state82, "ap_CS_fsm_state82");
    sc_trace(mVcdFile, grp_fu_788_p0, "grp_fu_788_p0");
    sc_trace(mVcdFile, grp_fu_784_p2, "grp_fu_784_p2");
    sc_trace(mVcdFile, grp_fu_788_p2, "grp_fu_788_p2");
    sc_trace(mVcdFile, sext_ln43_1_fu_813_p1, "sext_ln43_1_fu_813_p1");
    sc_trace(mVcdFile, sext_ln44_fu_816_p1, "sext_ln44_fu_816_p1");
    sc_trace(mVcdFile, add_ln45_fu_819_p2, "add_ln45_fu_819_p2");
    sc_trace(mVcdFile, sext_ln45_fu_825_p1, "sext_ln45_fu_825_p1");
    sc_trace(mVcdFile, add_ln45_1_fu_829_p2, "add_ln45_1_fu_829_p2");
    sc_trace(mVcdFile, sext_ln45_1_fu_844_p1, "sext_ln45_1_fu_844_p1");
    sc_trace(mVcdFile, mul_ln26_1_fu_861_p0, "mul_ln26_1_fu_861_p0");
    sc_trace(mVcdFile, grp_fu_868_p0, "grp_fu_868_p0");
    sc_trace(mVcdFile, grp_fu_877_p0, "grp_fu_877_p0");
    sc_trace(mVcdFile, grp_fu_877_p1, "grp_fu_877_p1");
    sc_trace(mVcdFile, grp_fu_877_p2, "grp_fu_877_p2");
    sc_trace(mVcdFile, mul_ln35_fu_886_p0, "mul_ln35_fu_886_p0");
    sc_trace(mVcdFile, var1_s32_2_fu_892_p1, "var1_s32_2_fu_892_p1");
    sc_trace(mVcdFile, mul_ln53_fu_899_p0, "mul_ln53_fu_899_p0");
    sc_trace(mVcdFile, sext_ln53_fu_644_p1, "sext_ln53_fu_644_p1");
    sc_trace(mVcdFile, mul_ln53_fu_899_p1, "mul_ln53_fu_899_p1");
    sc_trace(mVcdFile, mul_ln53_1_fu_906_p0, "mul_ln53_1_fu_906_p0");
    sc_trace(mVcdFile, grp_fu_756_ap_start, "grp_fu_756_ap_start");
    sc_trace(mVcdFile, grp_fu_756_ap_done, "grp_fu_756_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_756_p10, "grp_fu_756_p10");
    sc_trace(mVcdFile, grp_fu_877_p10, "grp_fu_877_p10");
    sc_trace(mVcdFile, var1_s32_2_fu_892_p10, "var1_s32_2_fu_892_p10");
#endif

    }
    mHdltvinHandle.open("compensator.hdltvin.dat");
    mHdltvoutHandle.open("compensator.hdltvout.dat");
}

compensator::~compensator() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete compensator_compensator_io_s_axi_U;
    delete compensator_fptrubkb_U1;
    delete compensator_fptrubkb_U2;
    delete compensator_fptrubkb_U3;
    delete compensator_dmul_cud_U4;
    delete compensator_dmul_cud_U5;
    delete compensator_ddiv_dEe_U6;
    delete compensator_sitodeOg_U7;
    delete compensator_sitodfYi_U8;
    delete compensator_mul_1g8j_U9;
    delete compensator_mul_1hbi_U10;
    delete compensator_sdiv_ibs_U11;
    delete compensator_mul_1jbC_U12;
    delete compensator_mul_5kbM_U13;
    delete compensator_mul_1lbW_U14;
    delete compensator_mul_mmb6_U15;
    delete compensator_mac_mncg_U16;
    delete compensator_mac_mocq_U17;
    delete compensator_mul_mpcA_U18;
    delete compensator_mul_mqcK_U19;
    delete compensator_mul_mrcU_U20;
    delete compensator_mul_msc4_U21;
}

void compensator::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void compensator::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3F70000000000000;
}

void compensator::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_3F50000000000000;
}

void compensator::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv64_4059000000000000;
}

void compensator::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv30_2F704000;
}

void compensator::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        add_ln26_reg_928 = add_ln26_fu_312_p2.read();
        hum_raw_read_reg_913 = hum_raw.read();
        mul_ln25_reg_923 = mul_ln25_fu_292_p2.read();
        pres_raw_read_reg_918 = pres_raw.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln31_reg_953 = add_ln31_fu_406_p2.read();
        sub_ln32_reg_961 = sub_ln32_fu_428_p2.read();
        trunc_ln2_reg_948 = add_ln28_fu_390_p2.read().range(23, 8);
        var1_s32_1_reg_966 = var1_s32_1_fu_434_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        add_ln45_2_reg_1115 = add_ln45_2_fu_847_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        empty_20_reg_978 = empty_20_fu_452_p2.read();
        tmp_14_reg_988 = sub_ln50_fu_503_p2.read().range(31, 15);
        trunc_ln8_reg_983 = add_ln50_1_fu_469_p2.read().range(31, 15);
        var2_s64_reg_973 = var2_s64_fu_446_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        mul_ln35_2_reg_1023 = mul_ln35_2_fu_638_p2.read();
        tmp_10_reg_1018 = mul_ln35_1_fu_622_p2.read().range(52, 8);
        trunc_ln53_1_reg_1028 = mul_ln53_fu_899_p2.read().range(31, 7);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        mul_ln35_reg_1003 = mul_ln35_fu_886_p2.read();
        trunc_ln9_reg_1013 = var1_s32_2_fu_892_p2.read().range(31, 15);
        var1_s32_2_reg_1008 = var1_s32_2_fu_892_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        mul_ln36_reg_1053 = grp_fu_679_p2.read();
        mul_ln42_reg_1058 = grp_fu_593_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        mul_ln43_reg_1095 = grp_fu_778_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        p_fine_reg_1078 = grp_fu_756_p2.read();
        trunc_ln5_reg_1084 = grp_fu_756_p2.read().range(63, 13);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        select_ln55_reg_1048 = select_ln55_fu_729_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        sext_ln43_reg_1089 = sext_ln43_fu_775_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sub_ln42_reg_993 = sub_ln42_fu_558_p2.read();
        tmp_15_reg_998 = grp_fu_877_p3.read().range(30, 14);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state100.read())) {
        tmp_1_reg_1140 = grp_fu_267_p2.read();
        tmp_4_reg_1145 = grp_fu_257_p2.read();
        tmp_7_reg_1150 = grp_fu_262_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read())) {
        tmp_3_reg_1130 = grp_fu_272_p1.read();
        tmp_6_reg_1135 = grp_fu_275_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        tmp_reg_1073 = grp_fu_272_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        trunc_ln25_reg_933 = trunc_ln25_fu_329_p1.read();
        trunc_ln26_1_reg_938 = mul_ln26_fu_336_p2.read().range(31, 12);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        trunc_ln26_2_reg_943 = mul_ln26_1_fu_861_p2.read().range(25, 14);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        trunc_ln43_1_reg_1100 = grp_fu_784_p2.read().range(63, 25);
        trunc_ln6_reg_1105 = grp_fu_788_p2.read().range(63, 19);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        trunc_ln53_2_reg_1038 = mul_ln53_1_fu_906_p2.read().range(31, 4);
        var1_s64_reg_1033 = var1_s64_fu_659_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        trunc_ln7_reg_1110 = add_ln45_1_fu_829_p2.read().range(63, 8);
    }
}

void compensator::thread_add_ln25_fu_318_p2() {
    add_ln25_fu_318_p2 = (!ap_const_lv32_A6A81954.is_01() || !mul_ln25_reg_923.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_A6A81954) + sc_biguint<32>(mul_ln25_reg_923.read()));
}

void compensator::thread_add_ln26_fu_312_p2() {
    add_ln26_fu_312_p2 = (!ap_const_lv29_1FFF91B3.is_01() || !sext_ln26_fu_308_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(ap_const_lv29_1FFF91B3) + sc_bigint<29>(sext_ln26_fu_308_p1.read()));
}

void compensator::thread_add_ln28_1_fu_384_p2() {
    add_ln28_1_fu_384_p2 = (!ap_const_lv24_80.is_01() || !shl_ln_fu_376_p3.read().is_01())? sc_lv<24>(): (sc_biguint<24>(ap_const_lv24_80) + sc_biguint<24>(shl_ln_fu_376_p3.read()));
}

void compensator::thread_add_ln28_fu_390_p2() {
    add_ln28_fu_390_p2 = (!sext_ln27_fu_372_p1.read().is_01() || !add_ln28_1_fu_384_p2.read().is_01())? sc_lv<24>(): (sc_bigint<24>(sext_ln27_fu_372_p1.read()) + sc_biguint<24>(add_ln28_1_fu_384_p2.read()));
}

void compensator::thread_add_ln31_fu_406_p2() {
    add_ln31_fu_406_p2 = (!t_fine_fu_367_p2.read().is_01() || !ap_const_lv22_3E0C00.is_01())? sc_lv<22>(): (sc_bigint<22>(t_fine_fu_367_p2.read()) + sc_bigint<22>(ap_const_lv22_3E0C00));
}

void compensator::thread_add_ln34_fu_542_p2() {
    add_ln34_fu_542_p2 = (!ap_const_lv50_30E2000000000.is_01() || !p_cast_fu_539_p1.read().is_01())? sc_lv<50>(): (sc_bigint<50>(ap_const_lv50_30E2000000000) + sc_bigint<50>(p_cast_fu_539_p1.read()));
}

void compensator::thread_add_ln36_fu_737_p2() {
    add_ln36_fu_737_p2 = (!ap_const_lv63_4821800000000000.is_01() || !mul_ln36_reg_1053.read().is_01())? sc_lv<63>(): (sc_bigint<63>(ap_const_lv63_4821800000000000) + sc_biguint<63>(mul_ln36_reg_1053.read()));
}

void compensator::thread_add_ln45_1_fu_829_p2() {
    add_ln45_1_fu_829_p2 = (!p_fine_reg_1078.read().is_01() || !sext_ln45_fu_825_p1.read().is_01())? sc_lv<64>(): (sc_bigint<64>(p_fine_reg_1078.read()) + sc_bigint<64>(sext_ln45_fu_825_p1.read()));
}

void compensator::thread_add_ln45_2_fu_847_p2() {
    add_ln45_2_fu_847_p2 = (!ap_const_lv57_26AC0.is_01() || !sext_ln45_1_fu_844_p1.read().is_01())? sc_lv<57>(): (sc_biguint<57>(ap_const_lv57_26AC0) + sc_bigint<57>(sext_ln45_1_fu_844_p1.read()));
}

void compensator::thread_add_ln45_fu_819_p2() {
    add_ln45_fu_819_p2 = (!sext_ln43_1_fu_813_p1.read().is_01() || !sext_ln44_fu_816_p1.read().is_01())? sc_lv<46>(): (sc_bigint<46>(sext_ln43_1_fu_813_p1.read()) + sc_bigint<46>(sext_ln44_fu_816_p1.read()));
}

void compensator::thread_add_ln50_1_fu_469_p2() {
    add_ln50_1_fu_469_p2 = (!shl_ln50_fu_461_p2.read().is_01() || !sext_ln50_2_fu_466_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln50_fu_461_p2.read()) + sc_bigint<32>(sext_ln50_2_fu_466_p1.read()));
}

void compensator::thread_and_ln50_1_fu_564_p3() {
    and_ln50_1_fu_564_p3 = esl_concat<17,5>(tmp_14_reg_988.read(), ap_const_lv5_0);
}

void compensator::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void compensator::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void compensator::thread_ap_CS_fsm_state100() {
    ap_CS_fsm_state100 = ap_CS_fsm.read()[99];
}

void compensator::thread_ap_CS_fsm_state101() {
    ap_CS_fsm_state101 = ap_CS_fsm.read()[100];
}

void compensator::thread_ap_CS_fsm_state102() {
    ap_CS_fsm_state102 = ap_CS_fsm.read()[101];
}

void compensator::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void compensator::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void compensator::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void compensator::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void compensator::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void compensator::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void compensator::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void compensator::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void compensator::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void compensator::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void compensator::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void compensator::thread_ap_CS_fsm_state79() {
    ap_CS_fsm_state79 = ap_CS_fsm.read()[78];
}

void compensator::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void compensator::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[79];
}

void compensator::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[80];
}

void compensator::thread_ap_CS_fsm_state82() {
    ap_CS_fsm_state82 = ap_CS_fsm.read()[81];
}

void compensator::thread_ap_CS_fsm_state86() {
    ap_CS_fsm_state86 = ap_CS_fsm.read()[85];
}

void compensator::thread_ap_CS_fsm_state87() {
    ap_CS_fsm_state87 = ap_CS_fsm.read()[86];
}

void compensator::thread_ap_CS_fsm_state88() {
    ap_CS_fsm_state88 = ap_CS_fsm.read()[87];
}

void compensator::thread_ap_CS_fsm_state89() {
    ap_CS_fsm_state89 = ap_CS_fsm.read()[88];
}

void compensator::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void compensator::thread_ap_CS_fsm_state94() {
    ap_CS_fsm_state94 = ap_CS_fsm.read()[93];
}

void compensator::thread_ap_CS_fsm_state95() {
    ap_CS_fsm_state95 = ap_CS_fsm.read()[94];
}

void compensator::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void compensator::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void compensator::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void compensator::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void compensator::thread_empty_20_fu_452_p1() {
    empty_20_fu_452_p1 =  (sc_lv<22>) (sext_ln31_fu_440_p1.read());
}

void compensator::thread_empty_20_fu_452_p2() {
    empty_20_fu_452_p2 = (!ap_const_lv48_1540000.is_01() || !empty_20_fu_452_p1.read().is_01())? sc_lv<48>(): sc_biguint<48>(ap_const_lv48_1540000) * sc_bigint<22>(empty_20_fu_452_p1.read());
}

void compensator::thread_grp_fu_272_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        grp_fu_272_p0 = sext_ln45_2_fu_853_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        grp_fu_272_p0 =  (sc_lv<64>) (sext_ln28_fu_761_p1.read());
    } else {
        grp_fu_272_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void compensator::thread_grp_fu_275_p0() {
    grp_fu_275_p0 = esl_zext<32,17>(select_ln55_reg_1048.read());
}

void compensator::thread_grp_fu_593_p0() {
    grp_fu_593_p0 =  (sc_lv<13>) (ap_const_lv64_C35);
}

void compensator::thread_grp_fu_679_p0() {
    grp_fu_679_p0 =  (sc_lv<17>) (ap_const_lv63_9043);
}

void compensator::thread_grp_fu_756_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_756_ap_start = ap_const_logic_1;
    } else {
        grp_fu_756_ap_start = ap_const_logic_0;
    }
}

void compensator::thread_grp_fu_756_p1() {
    grp_fu_756_p1 =  (sc_lv<31>) (grp_fu_756_p10.read());
}

void compensator::thread_grp_fu_756_p10() {
    grp_fu_756_p10 = esl_zext<64,30>(tmp_13_fu_742_p4.read());
}

void compensator::thread_grp_fu_778_p0() {
    grp_fu_778_p0 =  (sc_lv<14>) (ap_const_lv64_10BD);
}

void compensator::thread_grp_fu_784_p0() {
    grp_fu_784_p0 =  (sc_lv<51>) (sext_ln43_reg_1089.read());
}

void compensator::thread_grp_fu_788_p0() {
    grp_fu_788_p0 =  (sc_lv<15>) (ap_const_lv64_FFFFFFFFFFFFD80A);
}

void compensator::thread_grp_fu_868_p0() {
    grp_fu_868_p0 =  (sc_lv<7>) (ap_const_lv29_1FFFFFCE);
}

void compensator::thread_grp_fu_877_p0() {
    grp_fu_877_p0 =  (sc_lv<10>) (ap_const_lv31_182);
}

void compensator::thread_grp_fu_877_p1() {
    grp_fu_877_p1 =  (sc_lv<22>) (grp_fu_877_p10.read());
}

void compensator::thread_grp_fu_877_p10() {
    grp_fu_877_p10 = esl_zext<31,22>(xor_ln50_fu_571_p2.read());
}

void compensator::thread_grp_fu_877_p2() {
    grp_fu_877_p2 =  (sc_lv<15>) (ap_const_lv31_2000);
}

void compensator::thread_hum_comp_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read())) {
        hum_comp_ap_vld = ap_const_logic_1;
    } else {
        hum_comp_ap_vld = ap_const_logic_0;
    }
}

void compensator::thread_icmp_ln55_fu_713_p2() {
    icmp_ln55_fu_713_p2 = (!var1_s32_4_fu_705_p3.read().is_01() || !ap_const_lv31_19000000.is_01())? sc_lv<1>(): (sc_biguint<31>(var1_s32_4_fu_705_p3.read()) > sc_biguint<31>(ap_const_lv31_19000000));
}

void compensator::thread_mul_ln25_fu_292_p1() {
    mul_ln25_fu_292_p1 = trunc_ln_fu_278_p4.read();
}

void compensator::thread_mul_ln25_fu_292_p2() {
    mul_ln25_fu_292_p2 = (!ap_const_lv32_67AE.is_01() || !mul_ln25_fu_292_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_67AE) * sc_bigint<29>(mul_ln25_fu_292_p1.read());
}

void compensator::thread_mul_ln26_1_fu_861_p0() {
    mul_ln26_1_fu_861_p0 =  (sc_lv<7>) (ap_const_lv26_32);
}

void compensator::thread_mul_ln26_fu_336_p0() {
    mul_ln26_fu_336_p0 =  (sc_lv<29>) (sext_ln26_1_fu_333_p1.read());
}

void compensator::thread_mul_ln26_fu_336_p1() {
    mul_ln26_fu_336_p1 =  (sc_lv<29>) (sext_ln26_1_fu_333_p1.read());
}

void compensator::thread_mul_ln26_fu_336_p2() {
    mul_ln26_fu_336_p2 = (!mul_ln26_fu_336_p0.read().is_01() || !mul_ln26_fu_336_p1.read().is_01())? sc_lv<32>(): sc_bigint<29>(mul_ln26_fu_336_p0.read()) * sc_bigint<29>(mul_ln26_fu_336_p1.read());
}

void compensator::thread_mul_ln35_1_fu_622_p0() {
    mul_ln35_1_fu_622_p0 = add_ln31_reg_953.read();
}

void compensator::thread_mul_ln35_1_fu_622_p1() {
    mul_ln35_1_fu_622_p1 = mul_ln35_reg_1003.read();
}

void compensator::thread_mul_ln35_1_fu_622_p2() {
    mul_ln35_1_fu_622_p2 = (!mul_ln35_1_fu_622_p0.read().is_01() || !mul_ln35_1_fu_622_p1.read().is_01())? sc_lv<53>(): sc_bigint<22>(mul_ln35_1_fu_622_p0.read()) * sc_bigint<35>(mul_ln35_1_fu_622_p1.read());
}

void compensator::thread_mul_ln35_2_fu_638_p1() {
    mul_ln35_2_fu_638_p1 = add_ln31_reg_953.read();
}

void compensator::thread_mul_ln35_2_fu_638_p2() {
    mul_ln35_2_fu_638_p2 = (!ap_const_lv48_FFFFFD6A7000.is_01() || !mul_ln35_2_fu_638_p1.read().is_01())? sc_lv<48>(): sc_bigint<48>(ap_const_lv48_FFFFFD6A7000) * sc_bigint<22>(mul_ln35_2_fu_638_p1.read());
}

void compensator::thread_mul_ln35_fu_886_p0() {
    mul_ln35_fu_886_p0 =  (sc_lv<13>) (ap_const_lv35_BD0);
}

void compensator::thread_mul_ln53_1_fu_906_p0() {
    mul_ln53_1_fu_906_p0 =  (sc_lv<8>) (ap_const_lv32_4B);
}

void compensator::thread_mul_ln53_fu_899_p0() {
    mul_ln53_fu_899_p0 =  (sc_lv<17>) (sext_ln53_fu_644_p1.read());
}

void compensator::thread_mul_ln53_fu_899_p1() {
    mul_ln53_fu_899_p1 =  (sc_lv<17>) (sext_ln53_fu_644_p1.read());
}

void compensator::thread_p_cast_fu_539_p1() {
    p_cast_fu_539_p1 = esl_sext<50,48>(empty_20_reg_978.read());
}

void compensator::thread_pres_comp_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read())) {
        pres_comp_ap_vld = ap_const_logic_1;
    } else {
        pres_comp_ap_vld = ap_const_logic_0;
    }
}

void compensator::thread_select_ln55_fu_729_p3() {
    select_ln55_fu_729_p3 = (!icmp_ln55_fu_713_p2.read()[0].is_01())? sc_lv<17>(): ((icmp_ln55_fu_713_p2.read()[0].to_bool())? ap_const_lv17_19000: tmp_17_fu_719_p4.read());
}

void compensator::thread_sext_ln26_1_fu_333_p1() {
    sext_ln26_1_fu_333_p1 = esl_sext<32,29>(add_ln26_reg_928.read());
}

void compensator::thread_sext_ln26_3_fu_364_p1() {
    sext_ln26_3_fu_364_p1 = esl_sext<22,12>(trunc_ln26_2_reg_943.read());
}

void compensator::thread_sext_ln26_fu_308_p1() {
    sext_ln26_fu_308_p1 = esl_sext<29,28>(trunc_ln1_fu_298_p4.read());
}

void compensator::thread_sext_ln27_fu_372_p1() {
    sext_ln27_fu_372_p1 = esl_sext<24,22>(t_fine_fu_367_p2.read());
}

void compensator::thread_sext_ln28_fu_761_p1() {
    sext_ln28_fu_761_p1 = esl_sext<32,16>(trunc_ln2_reg_948.read());
}

void compensator::thread_sext_ln31_3_fu_412_p1() {
    sext_ln31_3_fu_412_p1 = esl_sext<26,22>(add_ln31_fu_406_p2.read());
}

void compensator::thread_sext_ln31_fu_440_p1() {
    sext_ln31_fu_440_p1 = esl_sext<48,22>(add_ln31_reg_953.read());
}

void compensator::thread_sext_ln32_1_fu_519_p1() {
    sext_ln32_1_fu_519_p1 = esl_sext<64,48>(var2_s64_reg_973.read());
}

void compensator::thread_sext_ln32_fu_424_p1() {
    sext_ln32_fu_424_p1 = esl_sext<26,25>(tmp_8_fu_416_p3.read());
}

void compensator::thread_sext_ln34_fu_548_p1() {
    sext_ln34_fu_548_p1 = esl_sext<64,50>(add_ln34_fu_542_p2.read());
}

void compensator::thread_sext_ln35_2_fu_656_p1() {
    sext_ln35_2_fu_656_p1 = esl_sext<48,45>(tmp_10_reg_1018.read());
}

void compensator::thread_sext_ln42_fu_535_p1() {
    sext_ln42_fu_535_p1 = esl_sext<64,63>(shl_ln1_fu_527_p3.read());
}

void compensator::thread_sext_ln43_1_fu_813_p1() {
    sext_ln43_1_fu_813_p1 = esl_sext<46,39>(trunc_ln43_1_reg_1100.read());
}

void compensator::thread_sext_ln43_fu_775_p1() {
    sext_ln43_fu_775_p1 = esl_sext<64,51>(trunc_ln5_reg_1084.read());
}

void compensator::thread_sext_ln44_fu_816_p1() {
    sext_ln44_fu_816_p1 = esl_sext<46,45>(trunc_ln6_reg_1105.read());
}

void compensator::thread_sext_ln45_1_fu_844_p1() {
    sext_ln45_1_fu_844_p1 = esl_sext<57,56>(trunc_ln7_reg_1110.read());
}

void compensator::thread_sext_ln45_2_fu_853_p1() {
    sext_ln45_2_fu_853_p1 = esl_sext<64,57>(add_ln45_2_reg_1115.read());
}

void compensator::thread_sext_ln45_fu_825_p1() {
    sext_ln45_fu_825_p1 = esl_sext<64,46>(add_ln45_fu_819_p2.read());
}

void compensator::thread_sext_ln50_2_fu_466_p1() {
    sext_ln50_2_fu_466_p1 = esl_sext<32,30>(grp_fu_868_p3.read());
}

void compensator::thread_sext_ln50_3_fu_499_p1() {
    sext_ln50_3_fu_499_p1 = esl_sext<32,28>(shl_ln50_2_fu_492_p3.read());
}

void compensator::thread_sext_ln53_2_fu_685_p1() {
    sext_ln53_2_fu_685_p1 = esl_sext<32,28>(trunc_ln53_2_reg_1038.read());
}

void compensator::thread_sext_ln53_fu_644_p1() {
    sext_ln53_fu_644_p1 = esl_sext<32,17>(trunc_ln9_reg_1013.read());
}

void compensator::thread_shl_ln1_fu_527_p3() {
    shl_ln1_fu_527_p3 = esl_concat<32,31>(sub_ln41_fu_522_p2.read(), ap_const_lv31_0);
}

void compensator::thread_shl_ln50_1_fu_485_p3() {
    shl_ln50_1_fu_485_p3 = esl_concat<22,10>(var1_s32_1_reg_966.read(), ap_const_lv10_0);
}

void compensator::thread_shl_ln50_2_fu_492_p3() {
    shl_ln50_2_fu_492_p3 = esl_concat<22,6>(var1_s32_1_reg_966.read(), ap_const_lv6_0);
}

void compensator::thread_shl_ln50_fu_461_p2() {
    shl_ln50_fu_461_p2 = (!ap_const_lv32_E.is_01())? sc_lv<32>(): hum_raw_read_reg_913.read() << (unsigned short)ap_const_lv32_E.to_uint();
}

void compensator::thread_shl_ln_fu_376_p3() {
    shl_ln_fu_376_p3 = esl_concat<22,2>(t_fine_fu_367_p2.read(), ap_const_lv2_0);
}

void compensator::thread_sub_ln32_fu_428_p2() {
    sub_ln32_fu_428_p2 = (!sext_ln31_3_fu_412_p1.read().is_01() || !sext_ln32_fu_424_p1.read().is_01())? sc_lv<26>(): (sc_bigint<26>(sext_ln31_3_fu_412_p1.read()) - sc_bigint<26>(sext_ln32_fu_424_p1.read()));
}

void compensator::thread_sub_ln41_fu_522_p2() {
    sub_ln41_fu_522_p2 = (!ap_const_lv32_100000.is_01() || !pres_raw_read_reg_918.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_100000) - sc_biguint<32>(pres_raw_read_reg_918.read()));
}

void compensator::thread_sub_ln42_fu_558_p2() {
    sub_ln42_fu_558_p2 = (!var2_s64_2_fu_552_p2.read().is_01() || !sext_ln32_1_fu_519_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(var2_s64_2_fu_552_p2.read()) - sc_bigint<64>(sext_ln32_1_fu_519_p1.read()));
}

void compensator::thread_sub_ln50_fu_503_p2() {
    sub_ln50_fu_503_p2 = (!shl_ln50_1_fu_485_p3.read().is_01() || !sext_ln50_3_fu_499_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln50_1_fu_485_p3.read()) - sc_bigint<32>(sext_ln50_3_fu_499_p1.read()));
}

void compensator::thread_t_fine_fu_367_p2() {
    t_fine_fu_367_p2 = (!trunc_ln25_reg_933.read().is_01() || !sext_ln26_3_fu_364_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(trunc_ln25_reg_933.read()) + sc_bigint<22>(sext_ln26_3_fu_364_p1.read()));
}

void compensator::thread_temp_comp_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read())) {
        temp_comp_ap_vld = ap_const_logic_1;
    } else {
        temp_comp_ap_vld = ap_const_logic_0;
    }
}

void compensator::thread_tmp_13_fu_742_p4() {
    tmp_13_fu_742_p4 = add_ln36_fu_737_p2.read().range(62, 33);
}

void compensator::thread_tmp_16_fu_697_p3() {
    tmp_16_fu_697_p3 = var1_s32_3_fu_688_p2.read().range(31, 31);
}

void compensator::thread_tmp_17_fu_719_p4() {
    tmp_17_fu_719_p4 = var1_s32_4_fu_705_p3.read().range(28, 12);
}

void compensator::thread_tmp_8_fu_416_p3() {
    tmp_8_fu_416_p3 = esl_concat<22,3>(add_ln31_fu_406_p2.read(), ap_const_lv3_0);
}

void compensator::thread_trunc_ln1_fu_298_p4() {
    trunc_ln1_fu_298_p4 = temp_raw.read().range(31, 4);
}

void compensator::thread_trunc_ln25_fu_329_p1() {
    trunc_ln25_fu_329_p1 = var1_s32_fu_323_p2.read().range(22-1, 0);
}

void compensator::thread_trunc_ln53_fu_693_p1() {
    trunc_ln53_fu_693_p1 = var1_s32_3_fu_688_p2.read().range(31-1, 0);
}

void compensator::thread_trunc_ln_fu_278_p4() {
    trunc_ln_fu_278_p4 = temp_raw.read().range(31, 3);
}

void compensator::thread_var1_s32_1_fu_434_p2() {
    var1_s32_1_fu_434_p2 = (!ap_const_lv22_3ED400.is_01() || !t_fine_fu_367_p2.read().is_01())? sc_lv<22>(): (sc_bigint<22>(ap_const_lv22_3ED400) + sc_bigint<22>(t_fine_fu_367_p2.read()));
}

void compensator::thread_var1_s32_2_fu_892_p1() {
    var1_s32_2_fu_892_p1 =  (sc_lv<17>) (var1_s32_2_fu_892_p10.read());
}

void compensator::thread_var1_s32_2_fu_892_p10() {
    var1_s32_2_fu_892_p10 = esl_zext<32,17>(tmp_15_reg_998.read());
}

void compensator::thread_var1_s32_3_fu_688_p2() {
    var1_s32_3_fu_688_p2 = (!var1_s32_2_reg_1008.read().is_01() || !sext_ln53_2_fu_685_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(var1_s32_2_reg_1008.read()) - sc_bigint<32>(sext_ln53_2_fu_685_p1.read()));
}

void compensator::thread_var1_s32_4_fu_705_p3() {
    var1_s32_4_fu_705_p3 = (!tmp_16_fu_697_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_16_fu_697_p3.read()[0].to_bool())? ap_const_lv31_0: trunc_ln53_fu_693_p1.read());
}

void compensator::thread_var1_s32_fu_323_p2() {
    var1_s32_fu_323_p2 = (!add_ln25_fu_318_p2.read().is_01() || !ap_const_lv32_B.is_01())? sc_lv<32>(): sc_bigint<32>(add_ln25_fu_318_p2.read()) >> (unsigned short)ap_const_lv32_B.to_uint();
}

void compensator::thread_var1_s64_fu_659_p2() {
    var1_s64_fu_659_p2 = (!sext_ln35_2_fu_656_p1.read().is_01() || !mul_ln35_2_reg_1023.read().is_01())? sc_lv<48>(): (sc_bigint<48>(sext_ln35_2_fu_656_p1.read()) + sc_biguint<48>(mul_ln35_2_reg_1023.read()));
}

void compensator::thread_var2_s64_2_fu_552_p2() {
    var2_s64_2_fu_552_p2 = (!sext_ln42_fu_535_p1.read().is_01() || !sext_ln34_fu_548_p1.read().is_01())? sc_lv<64>(): (sc_bigint<64>(sext_ln42_fu_535_p1.read()) + sc_bigint<64>(sext_ln34_fu_548_p1.read()));
}

void compensator::thread_var2_s64_fu_446_p0() {
    var2_s64_fu_446_p0 = sub_ln32_reg_961.read();
}

void compensator::thread_var2_s64_fu_446_p1() {
    var2_s64_fu_446_p1 =  (sc_lv<22>) (sext_ln31_fu_440_p1.read());
}

void compensator::thread_var2_s64_fu_446_p2() {
    var2_s64_fu_446_p2 = (!var2_s64_fu_446_p0.read().is_01() || !var2_s64_fu_446_p1.read().is_01())? sc_lv<48>(): sc_bigint<26>(var2_s64_fu_446_p0.read()) * sc_bigint<22>(var2_s64_fu_446_p1.read());
}

void compensator::thread_xor_ln50_fu_571_p2() {
    xor_ln50_fu_571_p2 = (and_ln50_1_fu_564_p3.read() ^ ap_const_lv22_200000);
}

void compensator::thread_ap_NS_fsm() {
    if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state93;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        ap_NS_fsm = ap_ST_fsm_state95;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        ap_NS_fsm = ap_ST_fsm_state96;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        ap_NS_fsm = ap_ST_fsm_state97;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        ap_NS_fsm = ap_ST_fsm_state98;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state99;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        ap_NS_fsm = ap_ST_fsm_state100;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        ap_NS_fsm = ap_ST_fsm_state101;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        ap_NS_fsm = ap_ST_fsm_state102;
    }
    else if (esl_seteq<1,102,102>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<102>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void compensator::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_compensator_io_AWVALID\" :  \"" << s_axi_compensator_io_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_compensator_io_AWREADY\" :  \"" << s_axi_compensator_io_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_compensator_io_AWADDR\" :  \"" << s_axi_compensator_io_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_compensator_io_WVALID\" :  \"" << s_axi_compensator_io_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_compensator_io_WREADY\" :  \"" << s_axi_compensator_io_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_compensator_io_WDATA\" :  \"" << s_axi_compensator_io_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_compensator_io_WSTRB\" :  \"" << s_axi_compensator_io_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_compensator_io_ARVALID\" :  \"" << s_axi_compensator_io_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_compensator_io_ARREADY\" :  \"" << s_axi_compensator_io_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_compensator_io_ARADDR\" :  \"" << s_axi_compensator_io_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_compensator_io_RVALID\" :  \"" << s_axi_compensator_io_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_compensator_io_RREADY\" :  \"" << s_axi_compensator_io_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_compensator_io_RDATA\" :  \"" << s_axi_compensator_io_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_compensator_io_RRESP\" :  \"" << s_axi_compensator_io_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_compensator_io_BVALID\" :  \"" << s_axi_compensator_io_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_compensator_io_BREADY\" :  \"" << s_axi_compensator_io_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_compensator_io_BRESP\" :  \"" << s_axi_compensator_io_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

